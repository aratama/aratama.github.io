[
  {
    "id": "02cea526f5487d579cec",
    "url": "02cea526f5487d579cec",
    "metadata": {
      "id": "02cea526f5487d579cec",
      "description": "[第一話](5321d8cebce7b87851f6.html) / [前回](6b4353009059836569d1.html) / [デモ](https://aratama.github.io/cubbit/)\n\nゲームを作る日記です。本作の開発費は０円です。\n\n\n# ゲー",
      "created_at": "2017-01-05T02:24:46+09:00",
      "tags": [
        {
          "name": "ゲーム制作",
          "versions": []
        },
        {
          "name": "ゲーム開発",
          "versions": []
        },
        {
          "name": "sentry",
          "versions": []
        },
        {
          "name": "GamepadAPI",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第16話『Gamepad APIでブラウザでもゲームパッドを使う/Sentryでクラッシュレポート』"
    }
  },
  {
    "id": "0b89c36556cadbd751e2",
    "url": "0b89c36556cadbd751e2",
    "metadata": {
      "id": "0b89c36556cadbd751e2",
      "description": "何十秒もかかる重いタスクがあり、それをブラウザ上のJavaScriptでなるべく早く完了させたいとします。でも同期的に一気にやろうとすると、たまには制御返せってブラウザに怒られるし、ページが固まってしまうので困ります。\n\nたとえば、どうしても[コラッツの問題](https://j",
      "created_at": "2015-11-01T22:55:34+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        }
      ],
      "title": "なるべく早くtimeoutする"
    }
  },
  {
    "id": "115f6f6ea5a22abf9204",
    "url": "115f6f6ea5a22abf9204",
    "metadata": {
      "id": "115f6f6ea5a22abf9204",
      "description": "<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/YassineElouafi",
      "created_at": "2017-01-18T22:08:46+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "flux",
          "versions": []
        },
        {
          "name": "Elm",
          "versions": []
        },
        {
          "name": "redux",
          "versions": []
        },
        {
          "name": "redux-saga",
          "versions": []
        }
      ],
      "title": "Redux先輩ミーリマシン説"
    }
  },
  {
    "id": "160fe92376e795168acd",
    "url": "160fe92376e795168acd",
    "metadata": {
      "id": "160fe92376e795168acd",
      "description": "# 出来らあ！　1時間で構文解析から評価器まで書けるって言ったんだよ！\n\n* [プログラミング言語を作る。１時間で。](http://qiita.com/shuetsu@github/items/ac21e597265d6bb906dc)\n\n上のエントリは、Lispの『S式』みた",
      "created_at": "2016-10-03T21:14:39+09:00",
      "tags": [
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "JSON",
          "versions": []
        },
        {
          "name": "言語作成",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "新人プログラマ応援",
          "versions": []
        }
      ],
      "title": " えっ!?　１時間でオリジナルのプログラミング言語の開発を構文解析から!?"
    }
  },
  {
    "id": "2316b58162cfec150460",
    "url": "2316b58162cfec150460",
    "metadata": {
      "id": "2316b58162cfec150460",
      "description": "# はじめに\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"en\" dir=\"ltr\">&quot;PureScript is more like Haskell than Haskell itself.&q",
      "created_at": "2016-09-16T02:11:58+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "関数型プログラミング",
          "versions": []
        }
      ],
      "title": "純粋関数型スクリプト言語PureScriptのはじめかた。コンパイラの使いかたからサーバサイド/クライアントサイドアプリケーション開発まで"
    }
  },
  {
    "id": "247c6c0034b6383c5436",
    "url": "247c6c0034b6383c5436",
    "metadata": {
      "id": "247c6c0034b6383c5436",
      "description": "* [第一話　画像が表示できました](5321d8cebce7b87851f6.html)　←初回\n* [第五話　Babylonjsでｹﾞｰﾄｵﾌﾞﾊﾞﾋﾞﾛﾝ](7cba851de4d84a535bbb.html)　←前回\n\nテキトーに楽しくゲームを作る日記の続きです。今回はコ",
      "created_at": "2016-11-24T18:50:54+09:00",
      "tags": [
        {
          "name": "Blender",
          "versions": []
        },
        {
          "name": "Babylon.js",
          "versions": []
        },
        {
          "name": "makehuman",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第６話『makehumanとBlenderで涼風青葉ちゃんごっこの巻』"
    }
  },
  {
    "id": "26a813ab2b188ca39019",
    "url": "26a813ab2b188ca39019",
    "metadata": {
      "id": "26a813ab2b188ca39019",
      "description": "# 追記\n\nこんな記事を読むより、まともな関数型プログラミング言語を使ってまともに関数型プログラミングを学ぶほうが、関数型プログラミングについてよほど正確な理解を得られます。少しでも関数型プログラミングに興味のある人は、**まずは[真面目なHaskellの教科書](http://",
      "created_at": "2015-01-06T00:17:52+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "関数型言語",
          "versions": []
        }
      ],
      "title": "関数型言語のウソとホント"
    }
  },
  {
    "id": "281170191cacea77b1cd",
    "url": "281170191cacea77b1cd",
    "metadata": {
      "id": "281170191cacea77b1cd",
      "description": "![hierarchy.png](cdd5cb4b-61a5-804a-f763-fd537e502337.png)\n\n\n```dot\ndigraph G {\n    rankdir=\"BT\";\n    aize =\"4,4\";\n\n    Apply -> Functor;\n  ",
      "created_at": "2016-03-12T06:38:21+09:00",
      "tags": [
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "PureScriptの型クラス階層"
    }
  },
  {
    "id": "2d186fd463afa50075b5",
    "url": "2d186fd463afa50075b5",
    "metadata": {
      "id": "2d186fd463afa50075b5",
      "description": "* [第一話　画像が表示できました](5321d8cebce7b87851f6.html)　←初回\n* [第六話　Blenderで涼風青葉ちゃんごっこの巻](247c6c0034b6383c5436.html)　←前回\n\n\n粛々とゲームを作る日記です。しかも純粋関数型プログラミン",
      "created_at": "2016-11-27T13:26:57+09:00",
      "tags": [
        {
          "name": "GLSL",
          "versions": []
        },
        {
          "name": "minecraft",
          "versions": []
        },
        {
          "name": "Babylon.js",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第７話『オープンワールドという泥沼』"
    }
  },
  {
    "id": "2ff1891c2afdb90d9f2e",
    "url": "2ff1891c2afdb90d9f2e",
    "metadata": {
      "id": "2ff1891c2afdb90d9f2e",
      "description": "<br>\n\n<br>\n\n<br>\n\n<br>\n\n<br>\n\n**【注意事項】この記事はとてもとても古いです。現在のPureScriptとは大きく言語仕様が変わっており、この記事の情報はあまり宛てにならないと思います。あまりに現状のPureScriptとかけ離れているので削除も考え",
      "created_at": "2015-02-06T18:20:00+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "altjs",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "HaskellerのためのPureScriptことはじめ"
    }
  },
  {
    "id": "36fcf600b618e6722554",
    "url": "36fcf600b618e6722554",
    "metadata": {
      "id": "36fcf600b618e6722554",
      "description": "![maquette.png](36625a22-8ea3-9f8d-355b-9448cfd2e69c.png)\n\n仮想DOMなUIライブラリ**Maquette**(マケット)を紹介します。JavaScriptで仮想DOMといえばReact/Redux一択みたいな雰囲気ですが",
      "created_at": "2017-07-01T21:53:53+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "VirtualDom",
          "versions": []
        },
        {
          "name": "Maquette",
          "versions": []
        }
      ],
      "title": "5分でわかる、シンプルな仮想DOMライブラリMaquetteの紹介"
    }
  },
  {
    "id": "39e4126f470d8b84b291",
    "url": "39e4126f470d8b84b291",
    "metadata": {
      "id": "39e4126f470d8b84b291",
      "description": "![kleisli.png](d0e5491b-53af-bf2e-b980-6733d5530a31.png)\n\n\n\n\n**※この記事はずいぶん内容がわかりづらかったようで、さまざまな反応を頂きました。追記が複数ありますので、併せてご覧ください。**\n\n\n# TL;DR Ver",
      "created_at": "2016-02-12T00:35:45+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "RxJS",
          "versions": []
        },
        {
          "name": "Rx",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "Elm",
          "versions": []
        }
      ],
      "title": "リアクティブプログラミングとは何だったのか"
    }
  },
  {
    "id": "3d3d89ea3d05d85aa220",
    "url": "3d3d89ea3d05d85aa220",
    "metadata": {
      "id": "3d3d89ea3d05d85aa220",
      "description": "『純粋』関数型プログラミング言語といえば関数型プログラミング言語全体のなかでも殊更ラジカルな言語として知られていますが、『すべて純粋』という言語には、『だいたい純粋』という言語にはない利点があります。このテキストは、実感を得やすい具体的な場面を元に『純粋関数型』の利点を紹介してい",
      "created_at": "2016-02-01T10:19:13+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "reactjs",
          "versions": []
        },
        {
          "name": "redux",
          "versions": []
        }
      ],
      "title": "仮想DOMを使うのに純粋関数型言語が最適である理由"
    }
  },
  {
    "id": "3d55b0e54565dbb286a7",
    "url": "3d55b0e54565dbb286a7",
    "metadata": {
      "id": "3d55b0e54565dbb286a7",
      "description": "多くのプログラミング言語が用途を限定しない汎用の言語として設計されているのに対して、**領域特化言語**(ドメイン固有言語, domain-specific language, DSL)は何らかの目的に特化して設計された言語のことをいいます。領域特化言語を導入する利点のひとつは、",
      "created_at": "2015-09-05T02:20:00+09:00",
      "tags": [
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "Freeモナドで領域特化言語を作るとプリティミューテーション"
    }
  },
  {
    "id": "4460aa52bfe5f6778287",
    "url": "4460aa52bfe5f6778287",
    "metadata": {
      "id": "4460aa52bfe5f6778287",
      "description": "\n複雑なデータ構造の内部への読み書きを抽象化するライブラリ[Lens](https://github.com/ekmett/lens)の練習メモです。言語はPureScriptを使っています。この記事はHaskellな人も読めなくはないと思いますが、PureScriptとHask",
      "created_at": "2016-02-07T02:07:17+09:00",
      "tags": [
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "逆引きLensサンプルコード"
    }
  },
  {
    "id": "44f118b649367f010cb0",
    "url": "44f118b649367f010cb0",
    "metadata": {
      "id": "44f118b649367f010cb0",
      "description": "* [第一話　画像が表示できました](5321d8cebce7b87851f6.html)　←初回\n* [第三話　オンラインゲームになりました](5d3f61339e84d2715f71.html)　←前回\n\nゲームを作る日記的なヤツのつづきです。今回あんまりコードが出てこないの",
      "created_at": "2016-11-12T19:45:30+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "WebGL",
          "versions": []
        },
        {
          "name": "CANNON.js",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "関数型プログラミング",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第４話『WebGLとCannonでどう見てもマインクラフトです』"
    }
  },
  {
    "id": "463219b158d74668e7d9",
    "url": "463219b158d74668e7d9",
    "metadata": {
      "id": "463219b158d74668e7d9",
      "description": "![image.png](197677f5-7b17-dc43-a607-ed8f26587809.png)\n\n\nけものフレンズのロゴってカラフルでかわいいですよね！そんなわけで、けものフレンズっぽいロゴを作れるジェネレータをつくりました。たぶんだいたいのブラウザで動くと思います",
      "created_at": "2017-02-22T19:26:29+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "canvas",
          "versions": []
        },
        {
          "name": "Vanilla.JS",
          "versions": []
        },
        {
          "name": "けものフレンズ",
          "versions": []
        }
      ],
      "title": "けものフレンズっぽいロゴのジェネレータができたよ！"
    }
  },
  {
    "id": "5321d8cebce7b87851f6",
    "url": "5321d8cebce7b87851f6",
    "metadata": {
      "id": "5321d8cebce7b87851f6",
      "description": "![shot1.png](ea7d82ad-27d5-c99c-a386-9d44ce449d58.png)\n\n![shot2.png](aa2860cb-2ac6-c7f0-e4be-65683156008c.png)\n\n\n※画面は開発中のものです。実際の製品とはぜんぜん違いま",
      "created_at": "2016-10-29T21:01:28+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "ゲーム開発",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "Firebase",
          "versions": []
        },
        {
          "name": "関数型プログラミング",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第１話『画像が表示できました』"
    }
  },
  {
    "id": "5962fc29e2c168671d3f",
    "url": "5962fc29e2c168671d3f",
    "metadata": {
      "id": "5962fc29e2c168671d3f",
      "description": "* [第一話　画像が表示できました](5321d8cebce7b87851f6.html)　←初回\n* [第八話　たまにはデモします](c1017d61978afbce6cc5.html)　←前回\n\nゲームを作る日記です。オーディオ作業は難しい理屈とか要らなくてフィーリングだけで",
      "created_at": "2016-12-06T02:02:20+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "WebGL",
          "versions": []
        },
        {
          "name": "ゲーム制作",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "REAPER",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第９話『サウンドエフェクトの作業をしてコーディングで荒んだ心を癒やします』"
    }
  },
  {
    "id": "5a2b613378d07906c5c5",
    "url": "5a2b613378d07906c5c5",
    "metadata": {
      "id": "5a2b613378d07906c5c5",
      "description": "* [第一話　画像が表示できました](5321d8cebce7b87851f6.html)　←前回\n\nつづきです。\n\n# 座標変換！:eyes:\n\n前回は画像の読み込みと複数回の描画ができました。ここで**急にクォータービューっぽく表示してみたくなった**（思いつき）ので、そうし",
      "created_at": "2016-10-29T21:09:57+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "オンラインゲーム",
          "versions": []
        },
        {
          "name": "Firebase",
          "versions": []
        },
        {
          "name": "関数型プログラミング",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第２話『ゲームループとキー入力ができました』"
    }
  },
  {
    "id": "5d3f61339e84d2715f71",
    "url": "5d3f61339e84d2715f71",
    "metadata": {
      "id": "5d3f61339e84d2715f71",
      "description": "* [第二話](5a2b613378d07906c5c5.html)　←前回\n\n\nつづきです。\n\n# :fire:Firebase:fire:で一気にオンラインゲームに！\n\n**そろそろオンラインゲームっぽくしたくなった**(思いつき)ので、オンラインゲームっぽくしておきましょう",
      "created_at": "2016-10-31T06:56:43+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "オンラインゲーム",
          "versions": []
        },
        {
          "name": "Firebase",
          "versions": []
        },
        {
          "name": "関数型プログラミング",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第３話『オンラインゲームになりました』"
    }
  },
  {
    "id": "6b4353009059836569d1",
    "url": "6b4353009059836569d1",
    "metadata": {
      "id": "6b4353009059836569d1",
      "description": "[第一話](5321d8cebce7b87851f6.html) / [前回](910354220d14d597b876.html) / [デモ](https://aratama.github.io/cubbit/) / [ステま](http://magicofstella.co",
      "created_at": "2016-12-28T12:14:30+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Babylon.js",
          "versions": []
        },
        {
          "name": "ゲーム開発",
          "versions": []
        },
        {
          "name": "Firebase",
          "versions": []
        },
        {
          "name": "RPGアツマール",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第15話『babylon.jsの水面マテリアルの流れは絶えずして』"
    }
  },
  {
    "id": "6c82aeb99476c5917783",
    "url": "6c82aeb99476c5917783",
    "metadata": {
      "id": "6c82aeb99476c5917783",
      "description": "* [「Rubyのここがイケてない」を論破したい](http://qiita.com/ocadaruma/items/4c66422cb7761f99e0fe)\n\n> Proc#callがださい\n\nたとえば、ふたつの引数の和を出力する関数`add`や`sum`について考えてみます",
      "created_at": "2016-09-22T18:40:56+09:00",
      "tags": [
        {
          "name": "Ruby",
          "versions": []
        },
        {
          "name": "Python",
          "versions": []
        },
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "ポエム",
          "versions": []
        }
      ],
      "title": "【短編ポエム】Haskell/PureScriptの関数呼び出しはRuby/Python/JavaScriptよりイケている"
    }
  },
  {
    "id": "72236dfb8476cd490e01",
    "url": "72236dfb8476cd490e01",
    "metadata": {
      "id": "72236dfb8476cd490e01",
      "description": "\n\n\nブラウザで本格的なサウンドプログラミングが可能になるWeb Audio APIを使って、リアルタイムで音声にフィルタを掛けられるツールを作りました。コードを書くことなくマウスで操作するだけで、好きな動画や音楽にエコーを掛けたりフィルタを掛けたり、MP3ファイルへとエンコード",
      "created_at": "2016-01-09T23:34:53+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "WebAudioAPI",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "Web Audio APIを使ってブラウザで音楽や音声にエフェクトをかけられるツールを作りました。"
    }
  },
  {
    "id": "7b1b6eb45f8207ea96e4",
    "url": "7b1b6eb45f8207ea96e4",
    "metadata": {
      "id": "7b1b6eb45f8207ea96e4",
      "description": "急にプログラミング言語を作りたくなったので、見た目はJavaScriptなのに遅延評価なプログラミング言語を作ってみました。このエントリで解説されている内容はほとんど実用性がないので、暇つぶしをしたい人だけお読みください。\n\n\n\n\n# 今回作ったもの\n\n「そもそも『遅延評価』って",
      "created_at": "2016-10-18T18:16:40+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "遅延評価",
          "versions": []
        },
        {
          "name": "作ってみた",
          "versions": []
        }
      ],
      "title": "どう見てもJavaScriptなのに遅延評価するオレオレプログラミング言語を作りました。遅延評価 is 何？"
    }
  },
  {
    "id": "7cba851de4d84a535bbb",
    "url": "7cba851de4d84a535bbb",
    "metadata": {
      "id": "7cba851de4d84a535bbb",
      "description": "* [第一話）　画像が表示できました](5321d8cebce7b87851f6.html)　←初回\n* [第四話　WebGLを使い始めたらどう見てもマインクラフトです](44f118b649367f010cb0.html)　←前回\n* (以下続刊)\n\nゲームを作る日記の続きです",
      "created_at": "2016-11-20T08:46:14+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Babylon.js",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第５話『Babylonjsでｹﾞｰﾄｵﾌﾞﾊﾞﾋﾞﾛﾝ』"
    }
  },
  {
    "id": "810ecdff0c1674d1a74e",
    "url": "810ecdff0c1674d1a74e",
    "metadata": {
      "id": "810ecdff0c1674d1a74e",
      "description": "前回筆者が書いた記事が長いって言われたので、今回は簡潔にいきます。この記事との関連は薄いので、前回の記事を読んでなくても大丈夫です。\n\nさて、言語全体が参照透明な(簡単にいえば副作用のない)式で構成される言語を純粋関数型プログラミング言語と言いますが、プログラミング言語から副作用",
      "created_at": "2015-01-11T13:57:27+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Haskell",
          "versions": []
        }
      ],
      "title": "純粋関数型JavaScriptのつくりかた"
    }
  },
  {
    "id": "8bbc0343bf794c368287",
    "url": "8bbc0343bf794c368287",
    "metadata": {
      "id": "8bbc0343bf794c368287",
      "description": "![pika5.png](2b41cbc0-c259-53e4-7af3-c4f4bc9f1ad8.png)\n\n# 仮説：モナドとはポケモンである\n\nこのテキストは、でんこうせっかの速さでモナドが使えるようになりたいひとのための、真面目なモナド入門です。数学っぽい話は出てこないで",
      "created_at": "2016-03-11T13:14:08+09:00",
      "tags": [
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "ポケットモンスター",
          "versions": []
        }
      ],
      "title": "モナドはポケモン。数学が出てこないモナド入門"
    }
  },
  {
    "id": "910354220d14d597b876",
    "url": "910354220d14d597b876",
    "metadata": {
      "id": "910354220d14d597b876",
      "description": "[第一話](5321d8cebce7b87851f6.html) / [前回](c9701d80db46b7850f58.html)\n\n淡々とゲームを作る日記です。ステラのまほう２期を待ち望んでいます。\n\n# ワールドの地形データを保存するようにしました\n\nそろそろゲームのプレイ",
      "created_at": "2016-12-27T18:02:15+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "Firebase",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第14話『冒涜的Firebase活用法』"
    }
  },
  {
    "id": "96a4a202a9a3471a9b4c",
    "url": "96a4a202a9a3471a9b4c",
    "metadata": {
      "id": "96a4a202a9a3471a9b4c",
      "description": "\nこの記事は[Phil Freeman, \"Why You Should Use PureScript\"](https://gist.github.com/paf31/adfd15fbb1ac8b99fc68be2c9aca8427)の邦訳です。この記事の原著者のフィルさんは、P",
      "created_at": "2017-08-17T17:08:50+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "関数型プログラミング",
          "versions": []
        }
      ],
      "title": "【翻訳】なぜPureScriptを使うべきなのか"
    }
  },
  {
    "id": "98598af2b0e9a6206ef3",
    "url": "98598af2b0e9a6206ef3",
    "metadata": {
      "id": "98598af2b0e9a6206ef3",
      "description": "PromiseやGeneratorのような機構を使ってもなお非同期処理は厄介だ、そしてもっとシンプルで便利な方法があるよ、という話です。前半の議論を元に、後半ではなぜプログラミング言語の作用をモナドで抽象すると便利なのかということの説明をしています。\n\n関数型プログラミング言語は",
      "created_at": "2015-09-17T20:13:07+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "promise",
          "versions": []
        },
        {
          "name": "generator",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "AffですべてのPromises/Generatorsを過去にする／そして何故我々は作用をモナドで抽象化すべきなのか"
    }
  },
  {
    "id": "9d32d96354740b2b7020",
    "url": "9d32d96354740b2b7020",
    "metadata": {
      "id": "9d32d96354740b2b7020",
      "description": "**型レベル計算**(あるいは**型レベルプログラミング**)は、プログラミング言語の型システムを~~悪用~~**有効活用**して、実行時ではなく**コンパイル時に**任意の計算を可能にするものです。型レベル計算はチューリング完全であり、理論上どんな計算でもできることが知られてい",
      "created_at": "2016-12-13T19:58:13+09:00",
      "tags": [
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "PureScriptで型レベル計算ドリル"
    }
  },
  {
    "id": "9e37a6bb6b6b3c9a59e4",
    "url": "9e37a6bb6b6b3c9a59e4",
    "metadata": {
      "id": "9e37a6bb6b6b3c9a59e4",
      "description": "![hyper@2x.png](3c3b376d-5c80-47c6-58b9-23d264453a65.png)\n\n\n# 動機\n\nNodeで簡単なサーバサイドアプリケーションを作ることを考えてみます。\n\n```js\nconst http = require('http');\n\n",
      "created_at": "2017-04-22T19:56:55+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Node",
          "versions": []
        },
        {
          "name": "Node.js",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "hyper",
          "versions": []
        }
      ],
      "title": "『先にヘッダを送信してから、そのあとでレスポンスボディを送信しなくてはならない』ことをコンパイル時に検証する"
    }
  },
  {
    "id": "afae75564ecac9ccde6a",
    "url": "afae75564ecac9ccde6a",
    "metadata": {
      "id": "afae75564ecac9ccde6a",
      "description": "# TL;DR Version\n\nJSONファイルを読み書きするには、[purescript-foreign-generic](https://github.com/paf31/purescript-foreign-generic)が便利です。\n\n\n\n# JSONめんどうくさい\n",
      "created_at": "2016-12-11T18:46:09+09:00",
      "tags": [
        {
          "name": "JSON",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "PureScriptを使ってJSONの型安全な読み書きを自動化する"
    }
  },
  {
    "id": "b1731c7b802cfc835b42",
    "url": "b1731c7b802cfc835b42",
    "metadata": {
      "id": "b1731c7b802cfc835b42",
      "description": "* [第１話　画像が表示できました](5321d8cebce7b87851f6.html)　←初回\n* [第９話　サウンドエフェクトの作業をしてコーディングで荒んだ心を癒やします](5962fc29e2c168671d3f.html)　←前回\n\n\n人喰いの大鷲トリコ面白そうですね",
      "created_at": "2016-12-08T21:54:57+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Blender",
          "versions": []
        },
        {
          "name": "Babylon.js",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第10話『ゲッダン☆と謎の儀式《バッド・ノウハウ》』"
    }
  },
  {
    "id": "c1017d61978afbce6cc5",
    "url": "c1017d61978afbce6cc5",
    "metadata": {
      "id": "c1017d61978afbce6cc5",
      "description": "* [第一話　画像が表示できました](5321d8cebce7b87851f6.html)　←初回\n* [第七話　オープンワールドという泥沼](2d186fd463afa50075b5.html)　←前回\n\nbabylonjsとかPureScriptとかを使って好きなように楽しく",
      "created_at": "2016-12-01T20:43:30+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "WebGL",
          "versions": []
        },
        {
          "name": "Blender",
          "versions": []
        },
        {
          "name": "Babylon.js",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第８話『たまにはデモします』"
    }
  },
  {
    "id": "c8dc4880d5621cfad250",
    "url": "c8dc4880d5621cfad250",
    "metadata": {
      "id": "c8dc4880d5621cfad250",
      "description": "\n\n[前回の記事](72236dfb8476cd490e01.html)の続きです。MIDI接続のキーボードなどを接続して、電子キーボードのように楽器の演奏ができるようになりました。今のところ、ピアノやヴァイオリンなどのオーケストラ楽器を中心に、数十種類の音色が用意されています。",
      "created_at": "2016-01-14T20:55:26+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "WebAudioAPI",
          "versions": []
        },
        {
          "name": "MIDI",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "WebMIDIAPI",
          "versions": []
        }
      ],
      "title": "Web Audio APIを使ってブラウザで音楽や音声にエフェクトをかけられるツールを作りました。(2) サウンドフォント"
    }
  },
  {
    "id": "c9701d80db46b7850f58",
    "url": "c9701d80db46b7850f58",
    "metadata": {
      "id": "c9701d80db46b7850f58",
      "description": "[第一話](5321d8cebce7b87851f6.html) / [前回](cdf2a7bb66fdcbf1a78c.html)\n\nゲームを作る日記です。古代の宗教家の誕生日に世間は沸いているようですが、私は無宗教なので特に感慨はないです。\n\n# PureScript By ",
      "created_at": "2016-12-24T04:00:59+09:00",
      "tags": [
        {
          "name": "ゲーム開発",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第13話『ネオアームストロングCannon.js砲じゃねえか完成度高けーなオイ』"
    }
  },
  {
    "id": "cdf2a7bb66fdcbf1a78c",
    "url": "cdf2a7bb66fdcbf1a78c",
    "metadata": {
      "id": "cdf2a7bb66fdcbf1a78c",
      "description": "[第一話](5321d8cebce7b87851f6.html) / [前回](d057a411bfd10a0b7924.html)\n\nゲームを作る日記です。星屑のインテンツィオーネに負けないゲームを作りたいと思います。\n\n# Oimo vs Cannon\n\n衝突判定を自分で作る",
      "created_at": "2016-12-18T22:10:23+09:00",
      "tags": [
        {
          "name": "RPGアツマール",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第12話『RPGアツマールに私も集まーる』"
    }
  },
  {
    "id": "ce2abda332d50f461493",
    "url": "ce2abda332d50f461493",
    "metadata": {
      "id": "ce2abda332d50f461493",
      "description": "[第一話](5321d8cebce7b87851f6.html) / [前回](02cea526f5487d579cec.html) / [デモ](https://aratama.github.io/cubbit/)\n\n黙々とゲームを作る日記です。今回は完全に脱線しています。Bl",
      "created_at": "2017-01-09T10:00:21+09:00",
      "tags": [
        {
          "name": "Blender",
          "versions": []
        },
        {
          "name": "ゲーム制作",
          "versions": []
        },
        {
          "name": "ゲーム開発",
          "versions": []
        },
        {
          "name": "琴葉茜",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第17話『ｱｶﾈﾁｬﾝｶﾜｲｲﾔｯﾀｰ!』"
    }
  },
  {
    "id": "d01e99df25c82f463b61",
    "url": "d01e99df25c82f463b61",
    "metadata": {
      "id": "d01e99df25c82f463b61",
      "description": "現状のPureScriptでは、コンパイル後のモジュールを結合するのに\n\n* browserifyやwebpackを使って通常のCommonjsモジュールとして結合する方法（でかい）\n* psc-bundleを使って結合する方法（デッドコード削除が効くので、こっちのほうが断然結合",
      "created_at": "2017-02-05T01:13:51+09:00",
      "tags": [
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "rollup.js",
          "versions": []
        }
      ],
      "title": "rollup-plugin-pursでPureScriptのモジュールを結合する(インライン化、デッドコード排除)"
    }
  },
  {
    "id": "d057a411bfd10a0b7924",
    "url": "d057a411bfd10a0b7924",
    "metadata": {
      "id": "d057a411bfd10a0b7924",
      "description": "[第一話](5321d8cebce7b87851f6.html) / [前回](b1731c7b802cfc835b42.html)\n\nゲームを作る日記です。『[ステラのまほう](http://magicofstella.com/)』を見てたら、なんだかやる気が湧いてきました。\n",
      "created_at": "2016-12-17T21:05:16+09:00",
      "tags": [
        {
          "name": "Blender",
          "versions": []
        },
        {
          "name": "Babylon.js",
          "versions": []
        },
        {
          "name": "ゲーム開発",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "モナドのまほう　第11話『タイトル画面があるとゲームっぽい』"
    }
  },
  {
    "id": "ec3f58c7742e79e3885a",
    "url": "ec3f58c7742e79e3885a",
    "metadata": {
      "id": "ec3f58c7742e79e3885a",
      "description": "# おすすめ\n\n* 選ぶのが面倒なら、ひとまず**Halogen**を選べばいいと思います。ElmやReact/Reduxに似ている**Pux**もわりと人気があるようです\n* [こちら](https://github.com/alexmingoia/purescript-pux",
      "created_at": "2016-02-19T01:04:03+09:00",
      "tags": [
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "PureScriptのUIライブラリまとめ"
    }
  },
  {
    "id": "f1e048fc9a8ca51eddb2",
    "url": "f1e048fc9a8ca51eddb2",
    "metadata": {
      "id": "f1e048fc9a8ca51eddb2",
      "description": "\n**追記: この翻訳は超古いです。本文中のサンプルコードの多くは、最新版のコンパイラではコンパイルが通りません。最新の情報については、原著を参照してください。**基本的な概念は変わらないので、この翻訳もまったく参考にならないというわけではないと思いますが、なるべく原著を読むこと",
      "created_at": "2015-04-09T22:08:58+09:00",
      "tags": [
        {
          "name": "JavaScript",
          "versions": []
        },
        {
          "name": "Haskell",
          "versions": []
        },
        {
          "name": "関数型言語",
          "versions": []
        },
        {
          "name": "altjs",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        }
      ],
      "title": "関数型なAltJS、PureScriptの入門書を邦訳しました。"
    }
  },
  {
    "id": "f4c7028d481258b2b64f",
    "url": "f4c7028d481258b2b64f",
    "metadata": {
      "id": "f4c7028d481258b2b64f",
      "description": "にわかに[Reduxミーリ・マシン説](115f6f6ea5a22abf9204.html)が浮上したので、ミーリ・マシンが実用上どのように役立つのかを調べるため、ミーリ・マシンについてもう少し詳しくお勉強することにしました。\n\n# ミーリ・マシンの定義\n\n何か抽象的なものを学ぶ",
      "created_at": "2017-01-21T23:31:48+09:00",
      "tags": [
        {
          "name": "RxJS",
          "versions": []
        },
        {
          "name": "Rx",
          "versions": []
        },
        {
          "name": "purescript",
          "versions": []
        },
        {
          "name": "redux",
          "versions": []
        }
      ],
      "title": "ミーリマシンで遊ぼう"
    }
  },
  {
    "id": "renewal",
    "url": "renewal",
    "metadata": {
      "id": "renewal",
      "description": "![USAGI0I9A6075_TP_V.jpg](USAGI0I9A6075_TP_V.jpg)\r\n\r\nこの`aratama.github.io`はしばらく放置していたんですが、このたびリニューアルしました。\r\n\r\nこのブログの記事の多くは、Qiitaで私が書いたものをぶっこ抜",
      "created_at": "2017-05-20T21:14:39+09:00",
      "tags": [
        {
          "name": "about"
        }
      ],
      "title": " サイトをリニューアルしました"
    }
  },
  {
    "id": "site",
    "url": "site",
    "metadata": {
      "id": "site",
      "description": "このサイトは、わたしのブログです。タイトルはミヒャエル・エンデさんの短編より。\r\n\r\nあと、このブログの記事のいくつかは[私がQiitaで書いた記事](http://qiita.com/hiruberuto)と同一ですので、ご了承ください。\r\n\r\n# れんらくさき\r\n\r\n* [ツ",
      "created_at": "2525-04-01T00:00:00+09:00",
      "tags": [],
      "title": "このサイトについて"
    }
  }
]